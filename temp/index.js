 
/*
 * This file is automatically generated.  Do not edit it directly.
 * To create a new index.js, run `node assemble` in the root folder.
*/

import globalUtilitiesSingleton from './utilities';
import appSettings from './app_settings';

const controllers = {};
const routes = {}; 
const state = {}; 
const globalUtilities = globalUtilitiesSingleton(appSettings, state, controllers, routes);

import basicQuestionsInit from './controllers/basic_questions';
const basicQuestions = basicQuestionsInit(appSettings, state, controllers, globalUtilities);
controllers.basicQuestions = basicQuestions;
            
import clinicSelectionInit from './controllers/clinic_selection';
const clinicSelection = clinicSelectionInit(appSettings, state, controllers, globalUtilities);
controllers.clinicSelection = clinicSelection;
            
import itineraryInit from './controllers/itinerary';
const itinerary = itineraryInit(appSettings, state, controllers, globalUtilities);
controllers.itinerary = itinerary;
            
import johnInit from './controllers/john';
const john = johnInit(appSettings, state, controllers, globalUtilities);
controllers.john = john;
            
Object.assign(routes, globalUtilities.getRoutes(controllers));
controllers.default = globalUtilities.getDefaultController(controllers);
if(!controllers.default) {
    globalUtilities.makeError('assembly.js', 'getFileString', 'No default controller was indicated.');
}

// Start the machine:
globalUtilities.appInit(routes);
(routes[globalUtilities.getRoute()] || controllers.default).wake();
    